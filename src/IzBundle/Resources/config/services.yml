imports:
    - { resource: daos.yml }
    - { resource: exports.yml }
    - { resource: reports.yml }

services:
    #tbv controller DI named arguments die dan niet eerst hoeven;
    _defaults:
        autowire: true
        autoconfigure: true

    IzBundle\Command\:
        resource: '../../Command'
        tags: [ 'console.command' ]

    IzBundle\Controller\:
        resource: '../../Controller'
        tags: [ 'controller.service_arguments' ]

    IzBundle\Controller\DashboardController:
        arguments:
            $hulpaanbiedingenExport: '@iz.export.hulpaanbiedingen'
            $hulpvragenExport: '@iz.export.hulpvragen'
            $koppelingenExport: '@iz.export.koppelingen'
        tags: [ 'controller.service_arguments' ]

    IzBundle\Controller\DocumentenController:
        arguments:
           $entities: '@iz.document.entities'
        tags: [ 'controller.service_arguments' ]

    IzBundle\Controller\EindevaluatiesController:
        arguments:
            $entities: '@iz.verslag.entities'
        tags: [ 'controller.service_arguments' ]

    IzBundle\Controller\HulpaanbiedingenController:
        arguments:
            $entities: '@iz.hulpaanbod.entities'
            $export: '@iz.export.hulpaanbiedingen'
        tags: [ 'controller.service_arguments' ]

    IzBundle\Controller\HulpvragenController:
        arguments:
            $entities: '@iz.hulpvraag.entities'
            $export: '@iz.export.hulpvragen'
        tags: [ 'controller.service_arguments' ]

    IzBundle\Controller\IntakesController:
        arguments:
            $entities: '@iz.intake.entities'
            $export: '@iz.export.klanten'
        tags: [ 'controller.service_arguments' ]

    IzBundle\Controller\IntervisiegroepenController:
        arguments:
            $export: '@iz.export.intervisiegroepen'
        tags: [ 'controller.service_arguments' ]

    IzBundle\Controller\KlantenController:
        arguments:
            $export: '@iz.export.klanten'
        tags: [ 'controller.service_arguments' ]

    IzBundle\Controller\KoppelingenController:
        arguments:
            $export: '@iz.export.koppelingen'
        tags: [ 'controller.service_arguments' ]

    IzBundle\Controller\LidmaatschappenController:
        arguments:
            $entities: '@iz.lidmaatschap.entities'
        tags: [ 'controller.service_arguments' ]

    IzBundle\Controller\RapportagesController:
        arguments:
            $export: '@iz.export.report'
            $reports: !tagged_iterator iz.rapportage
        tags: [ 'controller.service_arguments' ]

    IzBundle\Controller\TussenevaluatiesController:
        arguments:
            $entities: '@iz.verslag.entities'
        tags: [ 'controller.service_arguments' ]

    IzBundle\Controller\VerslagenController:
        arguments:
            $entities: '@iz.verslag.entities'
        tags: [ 'controller.service_arguments' ]

    IzBundle\Controller\VrijwilligersController:
        arguments:
            $export: '@iz.export.vrijwilligers'
        tags: [ 'controller.service_arguments' ]

    iz.event.diensten_lookup_subscriber:
        class: IzBundle\Event\DienstenLookupSubscriber
        arguments:
            - "@doctrine.orm.entity_manager"
            - "@router"
        tags:
            - { name: kernel.event_subscriber }

    iz.repository.doelstelling:
        class: Doctrine\ORM\EntityRepository
        factory: ["@doctrine", getRepository]
        arguments:
            - IzBundle\Entity\Doelstelling

    iz.repository.iz_hulpvraag:
        class: Doctrine\ORM\EntityRepository
        factory: ["@doctrine", getRepository]
        arguments:
            - IzBundle\Entity\Hulpvraag

    iz.repository.iz_klant:
        class: Doctrine\ORM\EntityRepository
        factory: ["@doctrine", getRepository]
        arguments:
            - IzBundle\Entity\IzKlant

    iz.repository.project:
        class: IzBundle\Repository\ProjectRepository
        factory: ["@doctrine", getRepository]
        arguments:
            - IzBundle\Entity\Project
        tags:
            - app.doelstelling

    iz.repository.iz_vrijwilliger:
        class: Doctrine\ORM\EntityRepository
        factory: ["@doctrine", getRepository]
        arguments:
            - IzBundle\Entity\IzVrijwilliger

    iz.form.rapportage:
        class: IzBundle\Form\IzRapportageType
        tags:
            - { name: form.type }

    IzBundle\Twig\IzExtension:
        public: false
        tags:
            - { name: twig.extension }

    IzBundle\Event\IntakeEventSubscriber:
        arguments:
            - '@event_dispatcher'
        tags:
            - { name: doctrine.event_subscriber }

    koppeling_metadata:
        class: Doctrine\ORM\Mapping\ClassMetadata
        arguments:
             - IzBundle\Entity\Koppeling

    IzBundle\Repository\KoppelingenRepository:
        class: IzBundle\Repository\KoppelingenRepository
        arguments:
            - "@doctrine.orm.entity_manager"
            - "@koppeling_metadata"
        calls:
            - method: setHulpvraagRepository
              arguments:
                - "@iz.repository.iz_hulpvraag"
            - method: setSpecifiekeProjecten
              arguments:
                  - "%iz_specifieke_projecten%"
        public: true
        tags:
            - app.doelstelling