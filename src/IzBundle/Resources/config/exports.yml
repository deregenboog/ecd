services:
    iz.export.klanten:
        class: IzBundle\Export\IzKlantenExport
        arguments:
            - IzBundle\Entity\IzKlant
            -
                Nummer: { expression: 'entity.getKlant().getId()' }
                Aanmelddatum: { expression: 'entity.getDatumAanmelding()', type: 'date' }
                Intakedatum: { expression: 'entity.getIntake().getIntakeDatum()', condition: 'entity.getIntake()', type: 'date' }
                Afsluitdatum: { expression: 'entity.getAfsluitDatum()', type: 'date' }
                Geslacht: { expression: 'entity.getKlant().getGeslacht()' }
                Voornaam: { expression: 'entity.getKlant().getVoornaam()' }
                Tussenvoegsel: { expression: 'entity.getKlant().getTussenvoegsel()' }
                Achternaam: { expression: 'entity.getKlant().getAchternaam()' }
                Geboortedatum: { expression: 'entity.getKlant().getGeboortedatum()', type: 'date' }
                E-mail: { expression: 'entity.getKlant().getEmail()' }
                Adres: { expression: 'entity.getKlant().getAdres()' }
                Postcode: { expression: 'entity.getKlant().getPostcode()' }
                Woonplaats: { expression: 'entity.getKlant().getPlaats()' }
                Mobiel: { expression: 'entity.getKlant().getMobiel()' }
                Telefoon: { expression: 'entity.getKlant().getTelefoon()' }
                Werkgebied: { expression: 'entity.getKlant().getWerkgebied()' }
                Gezin met kinderen: { expression: 'entity.getIntake().isGezinMetKinderen() ? "ja" : "nee"', condition: 'entity.getIntake()' }
                Postvoorkeur: { expression: 'entity.getKlant().getGeenPost() ? "Geen post" : "Wel post"' }
                E-mailvoorkeur: { expression: 'entity.getKlant().getGeenEmail() ? "Geen e-mail" : "Wel e-mail"' }
                Open hulpvragen: { expression: 'export.getProjectenOpenstaandeHulpvragen(entity)' }
                Lopende koppelingen: { expression: 'export.getProjectenLopendeKoppelingen(entity)' }
                Afgesloten koppelingen: { expression: 'export.getProjectenAfgeslotenKoppelingen(entity)' }
                Startdatum eerste koppeling: { expression: 'export.getStartdatumEersteKoppeling(entity)', type: 'date' }
                Laatste afsluiting koppeling: { expression: 'export.getDatumLaatsteAfgeslotenKoppeling(entity)', type: 'date' }
                Medewerker intake: { expression: 'entity.getIntake().getMedewerker()', condition: 'entity.getIntake()' }
                Medewerker(s) hulpvraag: { expression: 'export.getMedewerkers(entity)' }
                Gekoppeld: { expression: 'entity.isGekoppeld() ? "ja" : "nee"' }
                Ontstaan contact: { expression: 'entity.getContactOntstaan()' }

    iz.export.intervisiegroepen:
        class: AppBundle\Export\GenericExport
        arguments:
            - IzBundle\Entity\Intervisiegroep
            -
                Naam: { expression: 'entity.getNaam()' }

    iz.export.vrijwilligers:
        class: IzBundle\Export\IzVrijwilligersExport
        arguments:
            - IzBundle\Entity\IzVrijwilliger
            -
                Nummer: { expression: 'entity.getVrijwilliger().getId()' }
                Aanmelddatum: { expression: 'entity.getDatumAanmelding()', type: 'date' }
                Intakedatum: { expression: 'entity.getIntake().getIntakeDatum()', condition: 'entity.getIntake()', type: 'date' }
                Afsluitdatum: { expression: 'entity.getAfsluitDatum()', type: 'date' }
                Geslacht: { expression: 'entity.getVrijwilliger().getGeslacht()' }
                Voornaam: { expression: 'entity.getVrijwilliger().getVoornaam()' }
                Tussenvoegsel: { expression: 'entity.getVrijwilliger().getTussenvoegsel()' }
                Achternaam: { expression: 'entity.getVrijwilliger().getAchternaam()' }
                Geboortedatum: { expression: 'entity.getVrijwilliger().getGeboortedatum()', type: 'date' }
                E-mail: { expression: 'entity.getVrijwilliger().getEmail()' }
                Adres: { expression: 'entity.getVrijwilliger().getAdres()' }
                Postcode: { expression: 'entity.getVrijwilliger().getPostcode()' }
                Woonplaats: { expression: 'entity.getVrijwilliger().getPlaats()' }
                Mobiel: { expression: 'entity.getVrijwilliger().getMobiel()' }
                Telefoon: { expression: 'entity.getVrijwilliger().getTelefoon()' }
                Werkgebied: { expression: 'entity.getVrijwilliger().getWerkgebied()' }
                Stagiair: { expression: 'entity.getIntake().isStagiair() ? "ja" : "nee"', condition: 'entity.getIntake()' }
                Postvoorkeur: { expression: 'entity.getVrijwilliger().getGeenPost() ? "Geen post" : "Wel post"' }
                E-mailvoorkeur: { expression: 'entity.getVrijwilliger().getGeenEmail() ? "Geen e-mail" : "Wel e-mail"' }
                Open hulpaanbiedingen: { expression: 'export.getProjectenOpenstaandeHulpaanbiedingen(entity)' }
                Lopende koppelingen: { expression: 'export.getProjectenLopendeKoppelingen(entity)' }
                Afgesloten koppelingen: { expression: 'export.getProjectenAfgeslotenKoppelingen(entity)' }
                Startdatum eerste koppeling: { expression: 'export.getStartdatumEersteKoppeling(entity)', type: 'date' }
                Laatste afsluiting koppeling: { expression: 'export.getDatumLaatsteAfgeslotenKoppeling(entity)', type: 'date' }
                Medewerker intake: { expression: 'entity.getIntake().getMedewerker()', condition: 'entity.getIntake()' }
                Medewerker(s) hulpaanbod: { expression: 'export.getMedewerkers(entity)' }
                Gekoppeld: { expression: 'entity.isGekoppeld() ? "ja" : "nee"' }
                Binnengekomen via: { expression: 'entity.getBinnengekomenVia()' }

    iz.export.hulpvragen:
        class: AppBundle\Export\GenericExport
        arguments:
            - IzBundle\Entity\Hulpvraag
            -
                Startdatum: { expression: 'entity.getStartdatum()', type: 'date' }
                Project: { expression: 'entity.getProject()' }
                Medewerker: { expression: 'entity.getMedewerker()' }
                Nummer: { expression: 'entity.getIzKlant().getKlant().getId()' }
                Intakedatum: { expression: 'entity.getIzKlant().getIntake().getIntakeDatum()', condition: 'entity.getIzKlant().getIntake()', type: 'date' }
                Afsluitdatum: { expression: 'entity.getIzKlant().getAfsluitDatum()', type: 'date' }
                Geslacht: { expression: 'entity.getIzKlant().getKlant().getGeslacht()' }
                Voornaam: { expression: 'entity.getIzKlant().getKlant().getVoornaam()' }
                Tussenvoegsel: { expression: 'entity.getIzKlant().getKlant().getTussenvoegsel()' }
                Achternaam: { expression: 'entity.getIzKlant().getKlant().getAchternaam()' }
                Geboortedatum: { expression: 'entity.getIzKlant().getKlant().getGeboortedatum()', type: 'date' }
                E-mail: { expression: 'entity.getIzKlant().getKlant().getEmail()' }
                Adres: { expression: 'entity.getIzKlant().getKlant().getAdres()' }
                Postcode: { expression: 'entity.getIzKlant().getKlant().getPostcode()' }
                Woonplaats: { expression: 'entity.getIzKlant().getKlant().getPlaats()' }
                Mobiel: { expression: 'entity.getIzKlant().getKlant().getMobiel()' }
                Telefoon: { expression: 'entity.getIzKlant().getKlant().getTelefoon()' }
                Werkgebied: { expression: 'entity.getIzKlant().getKlant().getWerkgebied()' }
                Postcodegebied: { expression: 'entity.getIzKlant().getKlant().getPostcodegebied()' }
                Ontstaan contact: { expression: 'entity.getIzKlant().getContactOntstaan()' }
                Laatste ZRM: { expression: 'entity.getIzKlant().getKlant().getLaatsteZrm()', type: 'date' }
                Aanmeldende organisatie: { expression: 'entity.getIzKlant().getOrganisatieAanmelder()' }
                Naam aanmelder: { expression: 'entity.getIzKlant().getNaamAanmelder()' }
                E-mail aanmelder: { expression: 'entity.getIzKlant().getEmailAanmelder()' }
                Telefoon aanmelder: { expression: 'entity.getIzKlant().getTelefoonAanmelder()' }

    iz.export.hulpaanbiedingen:
        class: AppBundle\Export\GenericExport
        arguments:
            - IzBundle\Entity\Hulpaanbod
            -
                Startdatum: { expression: 'entity.getStartdatum()', type: 'date' }
                Project: { expression: 'entity.getProject()' }
                Medewerker: { expression: 'entity.getMedewerker()' }
                Nummer: { expression: 'entity.getIzVrijwilliger().getVrijwilliger().getId()' }
                Intakedatum: { expression: 'entity.getIzVrijwilliger().getIntake().getIntakeDatum()', condition: 'entity.getIzVrijwilliger().getIntake()', type: 'date' }
                Afsluitdatum: { expression: 'entity.getIzVrijwilliger().getAfsluitDatum()', type: 'date' }
                Geslacht: { expression: 'entity.getIzVrijwilliger().getVrijwilliger().getGeslacht()' }
                Voornaam: { expression: 'entity.getIzVrijwilliger().getVrijwilliger().getVoornaam()' }
                Tussenvoegsel: { expression: 'entity.getIzVrijwilliger().getVrijwilliger().getTussenvoegsel()' }
                Achternaam: { expression: 'entity.getIzVrijwilliger().getVrijwilliger().getAchternaam()' }
                Geboortedatum: { expression: 'entity.getIzVrijwilliger().getVrijwilliger().getGeboortedatum()', type: 'date' }
                E-mail: { expression: 'entity.getIzVrijwilliger().getVrijwilliger().getEmail()' }
                Adres: { expression: 'entity.getIzVrijwilliger().getVrijwilliger().getAdres()' }
                Postcode: { expression: 'entity.getIzVrijwilliger().getVrijwilliger().getPostcode()' }
                Woonplaats: { expression: 'entity.getIzVrijwilliger().getVrijwilliger().getPlaats()' }
                Mobiel: { expression: 'entity.getIzVrijwilliger().getVrijwilliger().getMobiel()' }
                Telefoon: { expression: 'entity.getIzVrijwilliger().getVrijwilliger().getTelefoon()' }
                Werkgebied: { expression: 'entity.getIzVrijwilliger().getVrijwilliger().getWerkgebied()' }
                Postcodegebied: { expression: 'entity.getIzVrijwilliger().getVrijwilliger().getPostcodegebied()' }
                Binnengekomen via: { expression: 'entity.getIzVrijwilliger().getBinnengekomenVia()' }

    iz.export.koppelingen:
        class: AppBundle\Export\GenericExport
        arguments:
            - IzBundle\Entity\Koppeling
            -
                Startdatum koppeling: { expression: 'entity.getKoppelingStartdatum()', type: 'date' }
                Einddatum koppeling: { expression: 'entity.getKoppelingEinddatum()', type: 'date' }
                Afsluitreden: { expression: 'entity.getEindeKoppeling()' }
                Project: { expression: 'entity.getProject()' }
                Medewerker hulpvraag: { expression: 'entity.getMedewerker()' }
                Medewerker hulpaanbod: { expression: 'entity.getHulpaanbod().getMedewerker()' }
                Nummer deelnemer: { expression: 'entity.getIzKlant().getKlant().getId()' }
                Intakedatum deelnemer: { expression: 'entity.getIzKlant().getIntake().getIntakeDatum()', condition: 'entity.getIzKlant().getIntake()', type: 'date' }
                Afsluitdatum deelnemer: { expression: 'entity.getIzKlant().getAfsluitDatum()', type: 'date' }
                Geslacht deelnemer: { expression: 'entity.getIzKlant().getKlant().getGeslacht()' }
                Voornaam deelnemer: { expression: 'entity.getIzKlant().getKlant().getVoornaam()' }
                Tussenvoegsel deelnemer: { expression: 'entity.getIzKlant().getKlant().getTussenvoegsel()' }
                Achternaam deelnemer: { expression: 'entity.getIzKlant().getKlant().getAchternaam()' }
                Geboortedatum deelnemer: { expression: 'entity.getIzKlant().getKlant().getGeboortedatum()', type: 'date' }
                E-mail deelnemer: { expression: 'entity.getIzKlant().getKlant().getEmail()' }
                Adres deelnemer: { expression: 'entity.getIzKlant().getKlant().getAdres()' }
                Postcode deelnemer: { expression: 'entity.getIzKlant().getKlant().getPostcode()' }
                Woonplaats deelnemer: { expression: 'entity.getIzKlant().getKlant().getPlaats()' }
                Mobiel deelnemer: { expression: 'entity.getIzKlant().getKlant().getMobiel()' }
                Telefoon deelnemer: { expression: 'entity.getIzKlant().getKlant().getTelefoon()' }
                Werkgebied deelnemer: { expression: 'entity.getIzKlant().getKlant().getWerkgebied()' }
                Postcodegebied deelnemer: { expression: 'entity.getIzKlant().getKlant().getPostcodegebied()' }
                Ontstaan contact: { expression: 'entity.getIzKlant().getContactOntstaan()' }
                Gezin met kinderen: { expression: 'entity.getIzKlant().getIntake().isGezinMetKinderen() ? "ja" : "nee"', condition: 'entity.getIzKlant().getIntake()' }
                Aanmeldende organisatie: { expression: 'entity.getIzKlant().getOrganisatieAanmelder()' }
                Naam aanmelder: { expression: 'entity.getIzKlant().getNaamAanmelder()' }
                E-mail aanmelder: { expression: 'entity.getIzKlant().getEmailAanmelder()' }
                Telefoon aanmelder: { expression: 'entity.getIzKlant().getTelefoonAanmelder()' }
                Nummer vrijwilliger: { expression: 'entity.getHulpaanbod().getIzVrijwilliger().getVrijwilliger().getId()' }
                Intakedatum vrijwilliger: { expression: 'entity.getHulpaanbod().getIzVrijwilliger().getIntake().getIntakeDatum()', condition: 'entity.getHulpaanbod().getIzVrijwilliger().getIntake()', type: 'date' }
                Afsluitdatum vrijwilliger: { expression: 'entity.getHulpaanbod().getIzVrijwilliger().getAfsluitDatum()', type: 'date' }
                Geslacht vrijwilliger: { expression: 'entity.getHulpaanbod().getIzVrijwilliger().getVrijwilliger().getGeslacht()' }
                Voornaam vrijwilliger: { expression: 'entity.getHulpaanbod().getIzVrijwilliger().getVrijwilliger().getVoornaam()' }
                Tussenvoegsel vrijwilliger: { expression: 'entity.getHulpaanbod().getIzVrijwilliger().getVrijwilliger().getTussenvoegsel()' }
                Achternaam vrijwilliger: { expression: 'entity.getHulpaanbod().getIzVrijwilliger().getVrijwilliger().getAchternaam()' }
                Geboortedatum vrijwilliger: { expression: 'entity.getHulpaanbod().getIzVrijwilliger().getVrijwilliger().getGeboortedatum()', type: 'date' }
                E-mail vrijwilliger: { expression: 'entity.getHulpaanbod().getIzVrijwilliger().getVrijwilliger().getEmail()' }
                Adres vrijwilliger: { expression: 'entity.getHulpaanbod().getIzVrijwilliger().getVrijwilliger().getAdres()' }
                Postcode vrijwilliger: { expression: 'entity.getHulpaanbod().getIzVrijwilliger().getVrijwilliger().getPostcode()' }
                Woonplaats vrijwilliger: { expression: 'entity.getHulpaanbod().getIzVrijwilliger().getVrijwilliger().getPlaats()' }
                Mobiel vrijwilliger: { expression: 'entity.getHulpaanbod().getIzVrijwilliger().getVrijwilliger().getMobiel()' }
                Telefoon vrijwilliger: { expression: 'entity.getHulpaanbod().getIzVrijwilliger().getVrijwilliger().getTelefoon()' }
                Werkgebied vrijwilliger: { expression: 'entity.getHulpaanbod().getIzVrijwilliger().getVrijwilliger().getWerkgebied()' }
                Postcodegebied vrijwilliger: { expression: 'entity.getHulpaanbod().getIzVrijwilliger().getVrijwilliger().getPostcodegebied()' }
                Binnengekomen via: { expression: 'entity.getHulpaanbod().getIzVrijwilliger().getBinnengekomenVia()' }
                Stagiair: { expression: 'entity.getHulpaanbod().getIzVrijwilliger().getIntake().isStagiair() ? "ja" : "nee"', condition: 'entity.getHulpaanbod().getIzVrijwilliger().getIntake()' }

    iz.export.report:
        class: AppBundle\Export\ReportExport

    iz.export.selectie:
        class: IzBundle\Export\IzSelectionExport
        arguments:
            - IzBundle\Entity\IzKlant
            -
                Nummer: { expression: '"K" ~ entity.getKlant().getId()' }
                Intakedatum: { expression: 'entity.getIntake().getIntakeDatum()', condition: 'entity.getIntake()', type: 'date' }
                Afsluitdatum: { expression: 'entity.getAfsluitDatum()', type: 'date' }
                Geslacht: { expression: 'entity.getKlant().getGeslacht()' }
                Voornaam: { expression: 'entity.getKlant().getVoornaam()' }
                Tussenvoegsel: { expression: 'entity.getKlant().getTussenvoegsel()' }
                Achternaam: { expression: 'entity.getKlant().getAchternaam()' }
                Geboortedatum: { expression: 'entity.getKlant().getGeboortedatum()', type: 'date' }
                E-mail: { expression: 'entity.getKlant().getEmail()' }
                Adres: { expression: 'entity.getKlant().getAdres()' }
                Postcode: { expression: 'entity.getKlant().getPostcode()' }
                Woonplaats: { expression: 'entity.getKlant().getPlaats()' }
                Mobiel: { expression: 'entity.getKlant().getMobiel()' }
                Telefoon: { expression: 'entity.getKlant().getTelefoon()' }
                Werkgebied: { expression: 'entity.getKlant().getWerkgebied()' }
                Postcodegebied: { expression: 'entity.getKlant().getPostcodegebied()' }
                Postvoorkeur: { expression: 'entity.getKlant().getGeenPost() ? "Geen post" : "Wel post"' }
                E-mailvoorkeur: { expression: 'entity.getKlant().getGeenEmail() ? "Geen e-mail" : "Wel e-mail"' }
                Projecten: { expression: 'export.getProjecten(entity)' }
                Medewerker intake: { expression: 'export.getMedewerkerIntake(entity)' }
                Medewerkers koppelingen: { expression: 'export.getMedewerkers(entity)' }
                Gezin met kinderen: { expression: 'entity.getIntake().isGezinMetKinderen() ? "ja" : "nee"', condition: 'entity.getIntake()' }
                Stagiair: { expression: 'null' }
            - IzBundle\Entity\IzVrijwilliger
            -
                Nummer: { expression: '"V" ~ entity.getVrijwilliger().getId()' }
                Intakedatum: { expression: 'entity.getIntake().getIntakeDatum()', condition: 'entity.getIntake()', type: 'date' }
                Afsluitdatum: { expression: 'entity.getAfsluitDatum()', type: 'date' }
                Geslacht: { expression: 'entity.getVrijwilliger().getGeslacht()' }
                Voornaam: { expression: 'entity.getVrijwilliger().getVoornaam()' }
                Tussenvoegsel: { expression: 'entity.getVrijwilliger().getTussenvoegsel()' }
                Achternaam: { expression: 'entity.getVrijwilliger().getAchternaam()' }
                Geboortedatum: { expression: 'entity.getVrijwilliger().getGeboortedatum()', type: 'date' }
                E-mail: { expression: 'entity.getVrijwilliger().getEmail()' }
                Adres: { expression: 'entity.getVrijwilliger().getAdres()' }
                Postcode: { expression: 'entity.getVrijwilliger().getPostcode()' }
                Woonplaats: { expression: 'entity.getVrijwilliger().getPlaats()' }
                Mobiel: { expression: 'entity.getVrijwilliger().getMobiel()' }
                Telefoon: { expression: 'entity.getVrijwilliger().getTelefoon()' }
                Werkgebied: { expression: 'entity.getVrijwilliger().getWerkgebied()' }
                Postcodegebied: { expression: 'entity.getVrijwilliger().getPostcodegebied()' }
                Postvoorkeur: { expression: 'entity.getVrijwilliger().getGeenPost() ? "Geen post" : "Wel post"' }
                E-mailvoorkeur: { expression: 'entity.getVrijwilliger().getGeenEmail() ? "Geen e-mail" : "Wel e-mail"' }
                Projecten: { expression: 'export.getProjecten(entity)' }
                Medewerker intake: { expression: 'export.getMedewerkerIntake(entity)' }
                Medewerkers koppelingen: { expression: 'export.getMedewerkers(entity)' }
                Gezin met kinderen: { expression: 'null' }
                Stagiair: { expression: 'entity.getIntake().isStagiair() ? "ja" : "nee"', condition: 'entity.getIntake()' }
