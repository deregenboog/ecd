services:
    inloop.export.vrijwilliger:
        public: true
        class: AppBundle\Export\GenericExport
        arguments:
            - InloopBundle\Entity\Vrijwilliger
            -
                Nummer: { expression: 'entity.getVrijwilliger().getId()' }
                Aanmelddatum: { expression: 'entity.getAanmelddatum()', type: 'date' }
                Startdatum: { expression: 'entity.getStartdatum()', type: 'date' }
                Afsluitdatum: { expression: 'entity.getAfsluitdatum()', type: 'date' }
                Geslacht: { expression: 'entity.getVrijwilliger().getGeslacht()' }
                Voornaam: { expression: 'entity.getVrijwilliger().getVoornaam()' }
                Tussenvoegsel: { expression: 'entity.getVrijwilliger().getTussenvoegsel()' }
                Achternaam: { expression: 'entity.getVrijwilliger().getAchternaam()' }
                Geboortedatum: { expression: 'entity.getVrijwilliger().getGeboortedatum()', type: 'date' }
                Adres: { expression: 'entity.getVrijwilliger().getAdres()' }
                Postcode: { expression: 'entity.getVrijwilliger().getPostcode()' }
                Woonplaats: { expression: 'entity.getVrijwilliger().getPlaats()' }
                E-mail: { expression: 'entity.getVrijwilliger().getEmail()' }
                Mobiel: { expression: 'entity.getVrijwilliger().getMobiel()' }
                Telefoon: { expression: 'entity.getVrijwilliger().getTelefoon()' }
                Werkgebied: { expression: 'entity.getVrijwilliger().getWerkgebied()' }
                GGW-gebied: { expression: 'entity.getVrijwilliger().getPostcodegebied()' }
                Stagiair: { expression: 'entity.isStagiair()' }
                Postvoorkeur: { expression: 'entity.getVrijwilliger().getGeenPost()==false?"Post":"Geen Post"' }
                Emailvoorkeur: { expression: 'entity.getVrijwilliger().getGeenEmail()==false?"Email":"Geen Email"' }
                Medewerker Intake: { expression: 'entity.getMedewerker()' }
                Medewerker Locatie: { expression: 'entity.getMedewerkerLocatie()' }
                Binnengekomen via: { expression: 'entity.getBinnenVia()' }
                Locaties: { expression: 'entity.getLocaties()' }
                VOG aangevraagd: { expression: 'entity.getVrijwilliger().getVogAangevraagd()' }
                VOG aanwezig: { expression: 'entity.getVrijwilliger().getVogAanwezig()' }
                Overeenkomst aanwezig: { expression: 'entity.getVrijwilliger().getOvereenkomstAanwezig()' }

    inloop.export.vrijwilligerdownload:
        public: true
        class: AppBundle\Export\GenericExport
        arguments:
            - InloopBundle\Entity\Vrijwilliger
            - Rubriek: { expression: '"InloopVrijwilliger"' }
              Nummer: { expression: 'entity.getVrijwilliger().getId()' }
              Startdatum: { expression: 'entity.getStartdatum()', type: 'date' }
              Afsluitdatum: { expression: 'entity.getAfsluitdatum()', type: 'date' }
              Geslacht: { expression: 'entity.getVrijwilliger().getGeslacht()' }
              Voornaam: { expression: 'entity.getVrijwilliger().getVoornaam()' }
              Tussenvoegsel: { expression: 'entity.getVrijwilliger().getTussenvoegsel()' }
              Achternaam: { expression: 'entity.getVrijwilliger().getAchternaam()' }
              Geboortedatum: { expression: 'entity.getVrijwilliger().getGeboortedatum()', type: 'date' }
              E-mail: { expression: 'entity.getVrijwilliger().getEmail()' }
              Adres: { expression: 'entity.getVrijwilliger().getAdres()' }
              Postcode: { expression: 'entity.getVrijwilliger().getPostcode()' }
              Woonplaats: { expression: 'entity.getVrijwilliger().getPlaats()' }
              Werkgebied: { expression: 'entity.getVrijwilliger().getWerkgebied()' }
              Postvoorkeur: { expression: 'entity.getVrijwilliger().getGeenPost() ? "Geen post" : "Wel post"' }
              E-mailvoorkeur: { expression: 'entity.getVrijwilliger().getGeenEmail() ? "Geen e-mail" : "Wel e-mail"' }
            - 'Vrijwilligers Inloop'
            - '@InloopBundle\Service\VrijwilligerDao'
        tags:
            - { name: app.downloads }

    inloop.export.registraties:
        public: true
        class: InloopBundle\Export\RegistratiesExport
        arguments:
            - InloopBundle\Entity\Registratie
            -
                Nummer: { expression: 'entity.getAppKlant().getId()' }
                Voornaam: { expression: 'entity.getAppKlant().getVoornaam()' }
                Tussenvoegsel: { expression: 'entity.getAppKlant().getTussenvoegsel()' }
                Achternaam: { expression: 'entity.getAppKlant().getAchternaam()' }
                Geslacht: { expression: 'entity.getAppKlant().getGeslacht()' }
                Adres: { expression: 'entity.getAppKlant().getAdres()' }
                Postcode: { expression: 'entity.getAppKlant().getPostcode()' }
                Woonplaats: { expression: 'entity.getAppKlant().getPlaats()' }
                E-mail: { expression: 'entity.getAppKlant().getEmail()' }
                Mobiel: { expression: 'entity.getAppKlant().getMobiel()' }
                Telefoon: { expression: 'entity.getAppKlant().getTelefoon()' }
                Werkgebied: { expression: 'entity.getAppKlant().getWerkgebied()' }
                GGW-gebied: { expression: 'entity.getAppKlant().getPostcodegebied()' }
                Geboorteland: { expression: 'entity.getAppKlant().getGeboorteland()' }
                Nationaliteit: { expression: 'entity.getAppKlant().getNationaliteit()' }
                Locatie: { expression: 'entity.getLocatie()' }
                Binnen: { expression: 'entity.getBinnen()', type: 'datetime' }
                Buiten: { expression: 'entity.getBuiten()', type: 'datetime' }
                Maaltijd: { expression: 'entity.isMaaltijd()' }
                Activering: { expression: 'entity.isActivering()' }
                Kleding: { expression: 'entity.isKleding()' }
                Veegploeg: { expression: 'entity.isVeegploeg()' }
                Inkomens: { expression: 'export.getInkomens(entity.getAppKlant())' }
                Verblijf in Nederland sinds: { expression: 'entity.getAppKlant().getLaatsteIntake().getVerblijfInNederlandSinds()', condition: 'entity.getAppKlant().getLaatsteIntake()', type: 'date' }
                Verblijf in Amsterdam sinds: { expression: 'entity.getAppKlant().getLaatsteIntake().getVerblijfInAmsterdamSinds()', condition: 'entity.getAppKlant().getLaatsteIntake()', type: 'date' }
                Verblijfsstatus: { expression: 'entity.getAppKlant().getLaatsteIntake().getVerblijfsstatus()', condition: 'entity.getAppKlant().getLaatsteIntake()' }
                Woonsituatie: { expression: 'entity.getAppKlant().getLaatsteIntake().getWoonsituatie()', condition: 'entity.getAppKlant().getLaatsteIntake()' }

    inloop.export.schorsing:
        public: true
        class: AppBundle\Export\GenericExport
        arguments:
            - InloopBundle\Entity\Schorsing
            -
                Nummer: { expression: 'entity.getAppKlant().getId()' }
                Voornaam: { expression: 'entity.getAppKlant().getVoornaam()' }
                Tussenvoegsel: { expression: 'entity.getAppKlant().getTussenvoegsel()' }
                Achternaam: { expression: 'entity.getAppKlant().getAchternaam()' }
                Geslacht: { expression: 'entity.getAppKlant().getGeslacht()' }
                Begindatum: { expression: 'entity.getDatumVan()', type: 'date' }
                Einddatum: { expression: 'entity.getDatumTot()', type: 'date' }
                Locaties: { expression: 'entity.getLocaties()' }
                Redenen: { expression: 'entity.getRedenen()' }

    inloop.export.report:
        public: true
        class: AppBundle\Export\ReportExport
