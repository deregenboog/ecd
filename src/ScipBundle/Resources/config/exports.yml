services:
    scip.export.deelnames:
        public: true
        class: AppBundle\Export\GenericExport
        arguments:
            - ScipBundle\Entity\Deelname
            -
                Voornaam: { expression: 'entity.getDeelnemer().getAppKlant().getVoornaam()' }
                Tussenvoegsel: { expression: 'entity.getDeelnemer().getAppKlant().getTussenvoegsel()' }
                Achternaam: { expression: 'entity.getDeelnemer().getAppKlant().getAchternaam()' }
                KPL: { expression: 'entity.getProject().getKpl()' }
                Naam: { expression: 'entity.getProject().getNaam()' }
                Functie: { expression: 'entity.getDeelnemer().getFunctie()' }
                Werkbegeleider: { expression: 'entity.getDeelnemer().getWerkbegeleider()' }
                Actief: { expression: 'entity.isActief()' }
                WMO: { expression: 'entity.getDeelnemer().getRisNummer()' }
                EmailAdres: { expression: 'entity.getDeelnemer().getAppKlant().getEmail()' }
                Adres: { expression: 'entity.getDeelnemer().getAppKlant().getAdres()' }
                Postcode: { expression: 'entity.getDeelnemer().getAppKlant().getPostcode()' }
                Woonplaats: { expression: 'entity.getDeelnemer().getAppKlant().getPlaats()' }
                telNr: { expression: 'entity.getDeelnemer().getAppKlant().getMobiel()' }
                gebDatum: { expression: 'entity.getDeelnemer().getAppKlant().getGeboortedatum()', type: 'date' }
                maStart: { expression: 'entity.getBeschikbaarheid().getMaandagVan()', type: 'time', condition: 'entity.getBeschikbaarheid()' }
                maEnd: { expression: 'entity.getBeschikbaarheid().getMaandagTot()', type: 'time', condition: 'entity.getBeschikbaarheid()' }
                diStart: { expression: 'entity.getBeschikbaarheid().getDinsdagVan()', type: 'time', condition: 'entity.getBeschikbaarheid()' }
                diEnd: { expression: 'entity.getBeschikbaarheid().getDinsdagTot()', type: 'time', condition: 'entity.getBeschikbaarheid()' }
                woStart: { expression: 'entity.getBeschikbaarheid().getWoensdagVan()', type: 'time', condition: 'entity.getBeschikbaarheid()' }
                woEnd: { expression: 'entity.getBeschikbaarheid().getWoensdagTot()', type: 'time', condition: 'entity.getBeschikbaarheid()' }
                doStart: { expression: 'entity.getBeschikbaarheid().getDonderdagVan()', type: 'time', condition: 'entity.getBeschikbaarheid()' }
                doEnd: { expression: 'entity.getBeschikbaarheid().getDonderdagTot()', type: 'time', condition: 'entity.getBeschikbaarheid()' }
                vrStart: { expression: 'entity.getBeschikbaarheid().getVrijdagVan()', type: 'time', condition: 'entity.getBeschikbaarheid()' }
                vrEnd: { expression: 'entity.getBeschikbaarheid().getVrijdagTot()', type: 'time', condition: 'entity.getBeschikbaarheid()' }
                zaStart: { expression: 'entity.getBeschikbaarheid().getZaterdagVan()', type: 'time', condition: 'entity.getBeschikbaarheid()' }
                zaEnd: { expression: 'entity.getBeschikbaarheid().getZaterdagTot()', type: 'time', condition: 'entity.getBeschikbaarheid()' }
                zoStart: { expression: 'entity.getBeschikbaarheid().getZondagVan()', type: 'time', condition: 'entity.getBeschikbaarheid()' }
                zoEnd: { expression: 'entity.getBeschikbaarheid().getZondagTot()', type: 'time', condition: 'entity.getBeschikbaarheid()' }
