FROM node AS assets
WORKDIR /app
COPY assets assets
COPY package.json package-lock.json webpack.config.js yarn.lock ./
RUN npm install && yarn encore dev

FROM php:7.4

# install dependencies
RUN apt-get update && apt-get install -y \
    default-mysql-client \
    g++ \
    libfreetype6-dev \
    libicu-dev \
    libldap2-dev \
    libldap-common \
    libsasl2-dev \
    libjpeg62-turbo-dev \
    libpng-dev \
    libzip-dev \
    locales \
    zlib1g-dev \
    && pecl install xdebug-3.1.6 && docker-php-ext-enable xdebug \
    && docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu --with-ldap-sasl \
    && docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/include/ \
    && docker-php-ext-install gd intl ldap mysqli pdo_mysql zip
COPY --from=composer:2 /usr/bin/composer /usr/local/bin/composer

# configure
ENV APP_ENV=test
COPY docker/php/php.ini /usr/local/etc/php/
RUN \
    # set timezone
    echo "Europe/Amsterdam" > /etc/timezone \
    && dpkg-reconfigure -f noninteractive tzdata \
    # install locale
    && echo "nl_NL.UTF-8 UTF-8" > /etc/locale.gen \
    && locale-gen

# user/group ID build args
ARG UID
ARG GID
USER ${UID}:${GID}

# install PHP packages
WORKDIR /app
COPY composer.json composer.lock ./
RUN composer install --no-autoloader --no-scripts

# copy application code
COPY . .
COPY docker/php/.env.test .env
RUN composer install

COPY --from=assets --chown=${UID}:${GID} /app/public/build /app/public/build

ENTRYPOINT [ "php" ]
