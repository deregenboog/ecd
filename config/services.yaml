# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    pagination.items_per_page: 20
    doctrine.orm.naming_strategy.default.class: AppBundle\Service\DoctrineOrmNamingStrategy
    email_policy: '%env(EMAIL_POLICY)%'
    locale: '%env(LOCALE)%'
    profile: '%env(PROFILE)%'
    administrator_name: '%env(ADMINISTRATOR_NAME)%'
    administrator_email: '%env(ADMINISTRATOR_EMAIL)%'
    log_email: '%env(LOG_EMAIL)%'
    ldap_domain: '%env(LDAP_DOMAIN)%'
    ldap_port: '%env(int:LDAP_PORT)%'
    ldap_servers: '%env(json:LDAP_SERVERS)%'
    ldap_base_dn: '%env(LDAP_BASE_DN)%'
    ldap_search_user: '%env(LDAP_SEARCH_USER)%'
    ldap_search_password: '%env(LDAP_SEARCH_PASSWORD)%'
    tbc_months_period: 6
    tbc_countries:
        - RoemeniÃ«
        - Bulgarije
        - Estland
        - Letland
        - Litouwen
    amoc_locaties:
        - 'AMOC'
        - 'Nachtopvang DRG'
        - 'Amoc Gebruikersruimte'
    verblijfsstatus_niet_rechthebbend_id: 7
    informele_zorg_mail: '%env(INFORMELE_ZORG_MAIL)%'
    dagbesteding_mail: '%env(DAGBESTEDING_MAIL)%'
    inloophuis_mail: '%env(INLOOPHUIS_MAIL)%'
    hulpverlening_mail: '%env(HULPVERLENING_MAIL)%'
    agressie_mail: '%env(AGRESSIE_MAIL)%'
    administratiebedrijf_mail: '%env(ADMINISTRATIEBEDRIJF_MAIL)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
#    App\:
#        resource: '../src/*'
#        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
#    App\Controller\:
#        resource: '../src/Controller'
#        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
