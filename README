CakePHP is a rapid development framework for PHP which uses commonly known design patterns like Active Record, Association Data Mapping, Front Controller and MVC. Our primary goal is to provide a structured framework that enables PHP users at all levels to rapidly develop robust web applications, without any loss to flexibility.

The Cake Software Foundation - promoting development related to CakePHP
http://cakefoundation.org/

CakePHP - the rapid development PHP framework
http://www.cakephp.org

Cookbook - user documentation for learning about CakePHP
http://book.cakephp.org

API - quick reference to CakePHP
http://api.cakephp.org

The Bakery - everything CakePHP
http://bakery.cakephp.org

The Show - live and archived podcasts about CakePHP and more
http://live.cakephp.org

CakePHP Google Group - community mailing list and forum
http://groups.google.com/group/cake-php

#cakephp on irc.freenode.net - chat with CakePHP developers
irc://irc.freenode.net/cakephp

CakeForge - open development for CakePHP
http://cakeforge.org

CakePHP gear
http://www.cafepress.com/cakefoundation

Recommended Reading
http://astore.amazon.com/cakesoftwaref-20/

## System requirements

PHP 5.6 & MySql & Apache

    Modules :
    php5-mysql
    php-apc
    php5-curl
    php5-gd
    php5-ldap
    php5-mysql

Implement following changes on the file system :

    mkdir -p archive
    cp -rp app/tmp_template app/tmp
    cp -rp app/config_template app/config
    cp app/config/config_example1.php.txt  app/config/config.php
    cp app/config/database.php.default app/config/database.php
    chown -R www-data:www-data app/tmp archive    (or your apache usersid)

Create a mysql user and database. ECD is currently authenticating trough an openldap server, in the near future also active directory will be supported.

* Edit config.php, add the ldap server values
* define( 'GROUP_ADMIN', 10021 );  // 10021 is the Posix group id
* Configure the database.php
* cd app/config/schema
* edit load.sh
* Enter the mysql credentials or create a .my.cnf
* Run ./load.sh

This should populate the database

# Maintenance tasks

In production some maintenance tasks should be scheduled, for example using this crontab configuration:

    0 2,14 * * * /var/www/html/cake/console/cake -app /var/www/html/app/ unregister_all >> /var/log/ecdcron.log
    */15 * * * * /var/www/html/cake/console/cake -app /var/www/html/app/ send_email >> /var/log/send_email.log
    0 0 * * * mysql ecd < /var/www/html/app/config/schema/management_report_views.sql >> /var/log/cron-management_report_views.log 2>&1
